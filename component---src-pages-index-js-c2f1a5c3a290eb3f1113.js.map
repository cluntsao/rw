{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/rw_link.js","webpack:///./src/components/navigation.js","webpack:///./src/components/rw_header.js","webpack:///./src/components/layout.js"],"names":["IndexPage","react_default","a","createElement","layout","seo","title","keywords","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","style","opacity","_1059789557","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","RW_Link","to","color","fontSize","textDecoration","activeStyle","Navigation","display","justifyContent","backgroundColor","padding","rw_link","Header","Fragment","textAlign","maxWidth","margin","fadeIn","_2768061423","navigation","Layout","rw_header","siteTitle","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-c2f1a5c3a290eb3f1113.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = () => {\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n      {/* <h1>Hi people</h1>\r\n      <p>Welcome to your new Gatsby site.</p>\r\n      <p>Now go build something great.</p>\r\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n        <Image />\r\n      </div> */}\r\n\r\n      <StaticQuery\r\n        query={graphql`\r\n          query {\r\n            placeholderImage: file(relativePath: { eq: \"home_1800.jpg\" }) {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1000) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} style={{opacity: `0.7`}}/>}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby';\r\n\r\nconst RW_Link = ({ to, title }) => (\r\n    <Link to={to} style={{color: \"white\", fontSize:\"1rem\", textDecoration: \"none\"}} activeStyle={{color: \"gold\"}} >{title}</Link>\r\n)\r\n\r\nexport default RW_Link","import React from 'react'\r\nimport RW_Link from './rw_link';\r\nimport { Link } from 'gatsby';\r\n\r\n\r\nconst Navigation = () => (\r\n    <div style={{display:\"flex\", justifyContent: \"space-around\", backgroundColor: \"black\", padding: \"0.5vh 10vw\"}}>\r\n        <RW_Link to=\"/\" title=\"HOME\"/>\r\n        <RW_Link to=\"/page-2/\" title=\"Page2\"/>\r\n        <RW_Link to=\"/about/\" title=\"ABOUT\"/>\r\n        <RW_Link to=\"/contact/\" title=\"CONTACT\"/>\r\n        <RW_Link to=\"/blog/\" title=\"BLOG\"/>\r\n        <RW_Link to=\"/links/\" title=\"LINKS\"/>\r\n        <RW_Link to=\"/store/\" title=\"STORE\"/>\r\n        <RW_Link to=\"/advertise/\" title=\"ADVERTISE\"/>\r\n        \r\n    </div>\r\n)\r\n\r\nexport default Navigation","import React from 'react'\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport Navigation from './navigation'\r\n\r\nconst Header = () => (\r\n    <>\r\n        <div style={{textAlign: \"center\", maxWidth: \"25vw\", margin: \"0 auto\"}}>     \r\n            <StaticQuery\r\n                query={graphql`\r\n                query {\r\n                    placeholderImage: file(relativePath: { eq: \"rw_header.png\" }) {\r\n                    childImageSharp {\r\n                        fluid(maxHeight: 300) {\r\n                        ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n                `}\r\n                render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} fadeIn={false} />}\r\n            />\r\n        </div>\r\n        <Navigation />\r\n    </>\r\n)\r\n\r\nexport default Header","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./rw_header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          // style={{\r\n          //   margin: `0 auto`,\r\n          //   maxWidth: 960,\r\n          //   padding: `0px 1.0875rem 1.45rem`,\r\n          //   paddingTop: 0,\r\n          // }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}